---
name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'v*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@master

      - name: Set Variables
        run: |
          sudo apt update
          sudo apt install jq jo -y
          version_id=${GITHUB_REF_NAME:1}
          package_name=${GITHUB_REPOSITORY##*/}
          sha_short=$(git rev-parse --short "$GITHUB_SHA")
          cc_hash_id=${{ hashFiles('cello.c') }}
          echo "our_date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_ENV
          echo "git_hash=$sha_short" >> $GITHUB_ENV
          echo "version_id=$version_id" >> $GITHUB_ENV
          echo "package_name=$package_name" >> $GITHUB_ENV
          echo "cc_files_hash_id=${cc_hash_id:0:10}" >> $GITHUB_ENV
          echo "deb_path=debian/artifacts" >> $GITHUB_ENV
          echo "rpm_path=rpmbuild/RPMS" >> $GITHUB_ENV

      - name: DEB Cache for Ubuntu
        id: deb_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.deb_path }}
          # key: ${{ runner.os }}-${{ env.package_name }}-${{ env.version_id }}-${{ env.git_hash }}-deb_build_ubuntu-${{ hashFiles('cello.c') }}
          key: ${{ runner.os }}-${{ env.package_name }}-${{ env.version_id }}-deb_build-${{ env.cc_files_hash_id }}

      - name: RPM Cache
        id: rpm_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.rpm_path }}
          # key: ${{ runner.os }}-${{ env.package_name }}-${{ env.version_id }}-${{ env.git_hash }}-rpm_build_centos7-${{ hashFiles('cello.c') }}
          key: ${{ runner.os }}-${{ env.package_name }}-${{ env.version_id }}-rpm_build-${{ hashFiles('cello.c') }}

      - if: steps.deb_cache.outputs.cache-hit != 'true'
        name: Build DEB Package for Ubuntu
        id: deb_build_ubuntu
        uses: cnangel/build-deb-action@master
        with:
          before_build_hook: sed -i "s#0.0.30-1#${{ env.version_id }}-1#" debian/changelog
          buildpackage_opts: --build=binary
          is_output_all_files: false

      - if: steps.rpm_cache.outputs.cache-hit != 'true'
        name: Build RPM Package for CentOS7
        id: rpm_build_centos7
        uses: cnangel/rpmbuild@centos7
        with:
          spec_file: "${{ env.package_name }}.spec"

      - if: steps.rpm_cache.outputs.cache-hit != 'true'
        name: Build RPM Package for CentOS8
        id: rpm_build_centos8
        uses: cnangel/rpmbuild@centos8
        with:
          spec_file: "${{ env.package_name }}.spec"

      - if: steps.rpm_cache.outputs.cache-hit != 'true'
        name: Build RPM Package for CentOS9
        id: rpm_build_centos9
        uses: cnangel/rpmbuild@centos9
        with:
          spec_file: "${{ env.package_name }}.spec"

      - if: steps.rpm_cache.outputs.cache-hit != 'true'
        name: Build RPM Package for Fedora38
        id: rpm_build_fedora38
        uses: cnangel/rpmbuild@fedora/38
        with:
          spec_file: "${{ env.package_name }}.spec"

      - name: Set Output Info
        id: output_info
        run: |
          echo "deb_packages=$(find ${{ env.deb_path }} -name '*.deb' | jo -a | jq -r 'join("'","'")')" >> $GITHUB_OUTPUT
          echo "rpm_packages=$(find ${{ env.rpm_path }} -name '*.rpm' | jo -a | jq -r 'join("'","'")')" >> $GITHUB_OUTPUT

      - name: Release ${{ github.ref_name }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Changes in this Release ${{ github.ref_name }}
            - Create DEB and RPM
            - Upload DEB, Source RPM and RPMS
          files: |
            README.md,LICENSE
            ${{ steps.deb_build_ubuntu.outputs.deb_dir_names }}
            ${{ steps.rpm_build_centos7.outputs.rpm_dir_names }}
            ${{ steps.rpm_build_centos8.outputs.rpm_dir_names }}
            ${{ steps.rpm_build_centos9.outputs.rpm_dir_names }}
            ${{ steps.rpm_build_fedora38.outputs.rpm_dir_names }}
            ${{ steps.output_info.deb_packages }}
            ${{ steps.output_info.rpm_packages }}
          token: ${{ secrets.SSE_TOKEN }}
          draft: false
          prerelease: false
